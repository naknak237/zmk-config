/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
 
#define WKM 0
#define SYM 1
#define NUM 2
#define FUN 3
#define NAV 4
#define DANGER 5
#define LCK 6
#define QRT 7
#define MCF 8

&caps_word {
   continue-list = <UNDERSCORE MINUS BACKSPACE>;
};


/ {

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_wf_shift {
            layers = <0 1 2 3 4 5 7>;
            timeout-ms = <50>;
            // D + R
            key-positions = <2 3>;
            bindings = <&skq LSHFT>;
        };
        combo_gm_capsword {
            layers = <0 1 2 3 4 5>;
            timeout-ms = <100>;
            // G + Y
            key-positions = <17 18>;
            bindings = <&caps_word>;
        };
        combo_xc_ctrl {
            layers = <0 1 2 3 4 5 7>;
            timeout-ms = <50>;
            // X + M
            key-positions = <26 27>;
            bindings = <&sk LCTL>;
        };
        combo_unlock {
            timeout-ms = <50>;
            // (Z + SYM) + NAV (NUM + SFT)
            key-positions = <25 34 37 40>;
            bindings = <&tog LCK>;
        };
        combo_commadot_tab {
            layers = <0 1 2 3 4 5 7>;
            timeout-ms = <50>;
            // , + . = shift
            key-positions = <32 33>;
            bindings = <&kp TAB>;
        };
        combo_opt {
            layers = <0 1 2 3 4 5>;
            timeout-ms = <50>;
            // SYM + SPC = CMD
            key-positions = <37 38>;
            bindings = <&sk LCMD>;
        };
        combo_cmd {
            layers = <0 1 2 3 4 5>;
            timeout-ms = <50>;
            // NUM + ENT = OPT
            key-positions = <39 40>;
            bindings = <&sk LALT>;
        };
        combo_bspc {
            layers = <0 1 2 3 4 5>;
            timeout-ms = <80>;
            // SPC + ENT = BSPC
            key-positions = <38 39>;
            bindings = <&kp BSPC>;
        };
    };
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <200>;
    flavor = "tap-preferred";
};


/ {
        keymap {
                compatible = "zmk,keymap";
                workman_layer {
// ---------------------------------------------------------------------------
// |Tqrt |  Q  |  D  |  R  |  W  |  B  | |  J  |  F  |  U  |  ;  |     |Alt+F4|
// |Down |  A  |  S  |  H  |  T  |  G  | |  Y  |  N  |  E  |  O  |  I  | RAlt|
// |shift|  Z  |  X  |  M  |  C  |  V  | |  K  |  L  |  ,  |  .  |BKSP |shift|
//      | OPT |tap ESC hold -SYM-| SPC | | RET |-NUM-| CMD |
                        bindings = <
   &tog QRT &kp Q &kp D &kp R &kp W &kp B &kp J &kp F &kp U &kp P &kp SEMI &kp LA(F4)
   &kp DOWN &kp A &kp S &kp H &kp T &kp G &kp Y &kp N &kp E &kp O &kp I &kp RALT
   &kp LSHFT &lt MCF Z &kp X &kp M &kp C &kp V &kp K &kp L &kp COMMA &kp DOT &kp BSPC &kp LSHFT
            &kp LALT &lt SYM ESC &kp SPACE &kp RET &mo NUM &kp RCMD
                        >;
                };
                symbol_layer {
// ---------------------------------------------------------------------------
// |     |     |  \  |  %  |  $  |     | |     |  ^  |  {  |  }  |     |     |
// |     |  *  |  (  |  )  |  :  |     | |     |  '  |  [  |  ]  |  ;  |     |
// |     |-FUN-|  `  |  @  |  &  |     | |     |  #  |  <  |  >  | DEL |     |
//                   | OPT |_SYM_| SPACE | | RET | ESC | CMD |
                        bindings = <
   &none &none  &kp BSLH &kp PRCNT &kp DLLR  &none &none &kp CARET &kp LBRC &kp RBRC &none  &none
   &none &kp STAR &kp LPAR &kp RPAR  &kp COLON &none &none &kp SQT   &kp LBKT &kp RBKT &kp SEMI  &none
   &none &mo FUN  &kp GRAVE   &kp AT  &kp AMPS  &none &none &kp HASH &kp LT   &kp GT   &kp DEL &none
                             &trans &trans &kp SPACE &kp RET &kp ESC &trans
                        >;
                };
                number_layer {
// ---------------------------------------------------------------------------
// |     |     |  4  |  5  |  6  |     | |     |  |  |  -  |  /  |     |     |
// |     |  .  |  1  |  2  |  3  |     | |     |  "  |  _  |  =  |-NAV-|     |
// |     |  ~  |  7  |  8  |  9  |     | |     |  +  |  ?  |  !  | DEL |     |
//                   | OPT |  0  | SPC | | RET |_NUM_| CMD |
                        bindings = <
   &none &kp BSPC  &kp N4 &kp N5 &kp N6 &none &none &kp PIPE &kp MINUS &kp FSLH  &none &none
   &none &kp DOT &kp N1 &kp N2 &kp N3 &none &none &kp DQT  &kp UNDER &kp EQUAL &mo NAV  &none 
   &none &kp TILDE  &kp N7 &kp N8 &kp N9 &none &none &kp PLUS &kp QMARK  &kp EXCL    &kp DEL &none
                 &trans &kp N0 &kp SPACE &kp RET  &trans    &trans
                        >;
                };
                fun_layer {
// ---------------------------------------------------------------------------
// |     |     | F 6 | F 5 | F 4 | F10 | | BT0 | BT1 | BT2 | USB | BLE |     |
// |     |CAPSL| F 3 | F 2 | F 1 | F11 | |VMUTE|VOLDN|VOLUP|BRIDN|BRIUP|     |
// |     |_FUN_| F 9 | F 8 | F 7 | F12 | | <!> | <!> |SLEEP|-!!!-|<LCK>|
//                   | OPT |_SYM_| SPC | | RET |<LCK>| CMD |
                        bindings = <
   &none &bt BT_CLR &kp F6 &kp F5 &kp F4 &kp F10  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &out OUT_USB &out OUT_BLE &none 
   &none &kp CAPS &kp F3   &kp F2 &kp F1 &kp F11      &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP  &kp C_BRI_DN &kp C_BRI_UP &none
   &none &trans &kp F9 &kp F8 &kp F7  &kp F12      &none  &none &none &mo DANGER &to LCK   &none
                         &trans &trans &trans &trans &to LCK &trans 
                        >;
                };
                nav_layer {
// ---------------------------------------------------------------------------
// |     |     |     |     |     |     | |     |     |     |     |     |     |
// |     | TOG | EFF | BRI | BRD |     | | LFT | DWN | U P |RIGHT|_NAV_|     |
// |     | SAD |     |     |     |     | | HOM |PG_DN|PG_UP| END |     |     |
//                   | OPT |     | SPC | | RET |_NUM_| CMD |
                        bindings = <
   &none &none      &none &none &none &none &none    &none     &none     &none     &none  &none 
   &none &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &none &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans  &none 
   &none &none &none &none &none &none &kp HOME &kp PG_DN &kp PG_UP &kp END   &none &none 
                         &trans &none &trans &trans &trans &trans
                        >;
                };
                danger_layer {
// ---------------------------------------------------------------------------
// |     |     |     |     |     |     | |     |     |     |     |     |     |
// |     |     |     |     |     |     | |     |     |     |     |EP ON|     |
// |     |_FUN_|     |     |     |     | |BTCLR|     |     |_!!!_|EPOFF|     |
//                   |     |_SYM_|     | |     |     |     |
                    // impactful buttons
                    // Bluetooth clear, reset
                    bindings = <
&none &none &none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none &ext_power EP_ON &none 
&none &trans &none &none &none &none &bt BT_CLR &none &none &trans &ext_power EP_OFF &none 
&none &trans &none &none &none &none 
                    >;
                };
                lock_layer {
                    // only way out is the combo Z + SYM + NUM + SFT
                    // other combos are disabled too
                    bindings = <
&none &none &none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none 
                    >;
                };
                qwerty_layer {
// ---------------------------------------------------------------------------
// |TQRT |  Q  |  D  |  R  |  W  |  B  | |  j  |  f  |  u  |  ;  |     |     |
// |     |  a  |  s  |  h  |  t  |  g  | |  y  |  n  |  e  |  o  |  i  |     |
// |shift|  z  |  x  |  m  |  c  |  v  | |  k  |  l  |  ,  |  .  |BKSP |shift|
//                   | OPT |tap ESC hold -SYM-| SPC | | RET |-NUM-| CMD |
                        bindings = <
   &tog QRT &kp Q &kp W &kp E &kp R &kp T &kp Y &kp I   &kp O    &kp U   &kp P  &none
   &none &kp A &kp S &kp D &kp F &kp G &kp H &kp J   &kp K     &kp L   &kp SEMI    &none
   &none &kp Z &kp X &kp C &kp V &kp B &kp N &kp M   &kp COMMA &kp DOT &kp BSPC &none
            &kp LALT &lt SYM ESC &kp SPACE &kp RET &mo NUM &kp RCMD
                        >;
                };
                minecraft_layer {
// ---------------------------------------------------------------------------
// |     |     |  4  |  5  |  6  | F 3 | |     |     |     |     |     |     |
// |     |     |  1  |  2  |  3  |  F  | |     |     |     |     |     |     |
// |     |     |  7  |  8  |  9  |     | |     |     |     |     |     |     |
//                   |     | OPT |shift| |     |     |     |
                    bindings = <
&none &none &kp N4 &kp N5 &kp N6 &kp F3 &none &none &none &none &none &none 
&none &none &kp N1 &kp N2 &kp N3 &kp F &none &none &none &none &none &none 
&none &none &kp N7 &kp N8 &kp N9 &none &none &none &none &none &none &none 
                     &none &kp LALT &kp LSHFT &none &none &none 
                    >;
                };
        };
};
